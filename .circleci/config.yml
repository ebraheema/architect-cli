version: 2.1

executors:
  release:
    working_directory: ~/cli
    docker:
      - image: node:12

jobs:
  test-node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - run:
          name: clone submodules
          command: git submodule update --recursive --init
      - restore_cache:
          keys: &cache_config
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: npm install
      - run: ./bin/run --version
      - run: ./bin/run --help
      - run:
          name: Testing
          command: npm test
  test-node-12:
    <<: *test
    docker:
      - image: node:12
  test-node-10:
    <<: *test
    docker:
      - image: node:10
  lint:
    executor: release
    steps:
      - checkout
      - restore_cache:
          keys: *cache_config
      - run: npm install
      - run: npm run lint
  cache:
    executor: release
    steps:
      - checkout
      - run: npm install
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
          paths:
            - ~/cli/node_modules
            - ~/.npm
            - /usr/local/lib/node_modules
  build_cli:
    executor: release
    steps:
      - checkout
      - restore_cache:
          keys: *cache_config
      - run: npm install
      - run: npm run build
      - persist_to_workspace:
          root: ~/cli
          paths:
            - bin
            - lib
            - npm-shrinkwrap.json
            - oclif.manifest.json
            - package.json
            - package-lock.json
            - README.md

  publish_cli_binaries:
    executor: release
    steps:
      - checkout
      - restore_cache:
          keys: *cache_config
      - run: npm install
      - run:
          name: Install publish dependencies
          command: apt update && apt install -y p7zip-full && npm install -g @oclif/dev-cli
      - run:
          name: Build CLI binaries
          command: oclif-dev pack && ls -la ./dist/architect-${CIRCLE_TAG}/architect-${CIRCLE_TAG}
      - run:
          name: Push artifacts to tag
          command: curl -F ‘data=@./dist/architect-v0.3.9/architect-v0.3.9-darwin-x64.tar.gz’ -X POST https://uploads.github.com/repos/architect-team/architect-cli/releases/v1-test/assets?name=architect-v0.3.9-darwin-x64.tar.gz

  # publish_cli:
  #   executor: release
  #   steps:
  #     - attach_workspace:
  #         at: ~/cli
  #     - run:
  #         name: Authenticate with registry
  #         command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/cli/.npmrc
  #     - run:
  #         name: Publish package
  #         command: npm publish --access public

  # publish_graph_lib:
  #   executor: release
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           cd ./src/dependency-manager/
  #           npm install
  #           cd ../../
  #     - run:
  #         name: Build library
  #         command: |
  #           cd ./src/dependency-manager/
  #           npm run build
  #           cd ../../
  #     - run:
  #         name: Authenticate with registry
  #         command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/cli/src/dependency-manager/.npmrc
  #     - run:
  #         name: Tag release candidate
  #         command: |
  #           cd ./src/dependency-manager/
  #           npm version prerelease --git-tag-version=false --preid=rc
  #           cd ../../
  #     - run:
  #         name: Commit version bump
  #         command: |
  #           git config --global user.name "CircleCI"
  #           git config --global user.email "bot@architect.io"
  #           git add ./src/dependency-manager/package.json ./src/dependency-manager/package-lock.json
  #           git commit -m "[skip ci] cut new release candidate"
  #           git push origin master
  #     - run:
  #         name: Publish library
  #         command: cd ./src/dependency-manager/ && npm publish --access public && cd ../../

workflows:
  version: 2
  test:
    jobs:
      - lint:
          filters: &branches_only
            tags:
              ignore: /.*/
            branches:
              only: /.*/
      - test-node-latest:
          filters:
            <<: *branches_only
      - test-node-12:
          filters:
            <<: *branches_only
      - test-node-10:
          filters:
            <<: *branches_only
      - cache:
          requires:
            - lint
            - test-node-latest
            - test-node-12
            - test-node-10
      # - publish_graph_lib:
      #     context: NPM Packaging
      #     requires:
      #       - cache
      #     filters:
      #       branches:
      #         only: master
  release_cli:
    jobs:
      - build_cli:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      # - publish_cli:
      #     context: NPM Packaging
      #     requires:
      #       - build_cli
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
      - publish_cli_binaries:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
